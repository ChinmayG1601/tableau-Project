<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <_.fcp.DashboardExportButton.true...DashboardExportButton />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='customer+' inline='true' name='federated.0gfj05017w2an918lglgh0dsyy7d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='customer' name='textscan.1yepr6v1urcn311c8nps61yxnl8d'>
            <connection class='textscan' directory='C:/Users/hp/Desktop/DS PGC/Tableau/project/tableau data' filename='customer.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='SalesBudget.csv' table='[SalesBudget#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='real' name='Budget' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='customer.csv' table='[customer#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='customerkey' ordinal='0' />
              <column datatype='integer' name='geographykey' ordinal='1' />
              <column datatype='string' name='customeralternatekey' ordinal='2' />
              <column datatype='string' name='customer_name' ordinal='3' />
              <column datatype='integer' name='age' ordinal='4' />
              <column datatype='string' name='email_id' ordinal='5' />
              <column datatype='real' name='yearlyincome' ordinal='6' />
              <column datatype='string' name='address' ordinal='7' />
              <column datatype='string' name='phone' ordinal='8' />
              <column datatype='date' name='datefirstpurchase' ordinal='9' />
            </columns>
          </relation>
          <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='geography.csv' table='[geography#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='geographykey' ordinal='0' />
              <column datatype='string' name='city' ordinal='1' />
              <column datatype='string' name='state' ordinal='2' />
              <column datatype='string' name='country' ordinal='3' />
              <column datatype='string' name='postalcode' ordinal='4' />
              <column datatype='integer' name='salesterritorykey' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='sales.csv' table='[sales#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='productkey' ordinal='0' />
              <column datatype='date' name='orderdatekey' ordinal='1' />
              <column datatype='date' name='shipdatekey' ordinal='2' />
              <column datatype='integer' name='customerkey' ordinal='3' />
              <column datatype='integer' name='salesterritorykey' ordinal='4' />
              <column datatype='string' name='salesordernumber' ordinal='5' />
              <column datatype='real' name='unitprice' ordinal='6' />
              <column datatype='real' name='totalproductcost' ordinal='7' />
              <column datatype='real' name='salesamount' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='SalesBudget.csv' table='[SalesBudget#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='Date' ordinal='0' />
              <column datatype='real' name='Budget' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='date.csv' table='[date#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='date' name='datekey' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='day' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='product.csv' table='[product#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='productkey' ordinal='0' />
              <column datatype='string' name='productalternatekey' ordinal='1' />
              <column datatype='integer' name='subcategory_key' ordinal='2' />
              <column datatype='string' name='product_name' ordinal='3' />
              <column datatype='string' name='color' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='product_category.csv' table='[product_category#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='subcategory_key' ordinal='0' />
              <column datatype='string' name='subcategory_name' ordinal='1' />
              <column datatype='integer' name='productcategorykey' ordinal='2' />
              <column datatype='string' name='category_name' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Budget]' value='[SalesBudget.csv].[Budget]' />
          <map key='[Date]' value='[SalesBudget.csv].[Date]' />
          <map key='[address]' value='[customer.csv].[address]' />
          <map key='[age]' value='[customer.csv].[age]' />
          <map key='[category_name]' value='[product_category.csv].[category_name]' />
          <map key='[city]' value='[geography.csv].[city]' />
          <map key='[color]' value='[product.csv].[color]' />
          <map key='[country]' value='[geography.csv].[country]' />
          <map key='[customer_name]' value='[customer.csv].[customer_name]' />
          <map key='[customeralternatekey]' value='[customer.csv].[customeralternatekey]' />
          <map key='[customerkey (sales.csv)]' value='[sales.csv].[customerkey]' />
          <map key='[customerkey]' value='[customer.csv].[customerkey]' />
          <map key='[date]' value='[date.csv].[date]' />
          <map key='[datefirstpurchase]' value='[customer.csv].[datefirstpurchase]' />
          <map key='[datekey]' value='[date.csv].[datekey]' />
          <map key='[day]' value='[date.csv].[day]' />
          <map key='[email_id]' value='[customer.csv].[email_id]' />
          <map key='[geographykey (geography.csv)]' value='[geography.csv].[geographykey]' />
          <map key='[geographykey]' value='[customer.csv].[geographykey]' />
          <map key='[orderdatekey]' value='[sales.csv].[orderdatekey]' />
          <map key='[phone]' value='[customer.csv].[phone]' />
          <map key='[postalcode]' value='[geography.csv].[postalcode]' />
          <map key='[product_name]' value='[product.csv].[product_name]' />
          <map key='[productalternatekey]' value='[product.csv].[productalternatekey]' />
          <map key='[productcategorykey]' value='[product_category.csv].[productcategorykey]' />
          <map key='[productkey (product.csv)]' value='[product.csv].[productkey]' />
          <map key='[productkey]' value='[sales.csv].[productkey]' />
          <map key='[salesamount]' value='[sales.csv].[salesamount]' />
          <map key='[salesordernumber]' value='[sales.csv].[salesordernumber]' />
          <map key='[salesterritorykey (sales.csv)]' value='[sales.csv].[salesterritorykey]' />
          <map key='[salesterritorykey]' value='[geography.csv].[salesterritorykey]' />
          <map key='[shipdatekey]' value='[sales.csv].[shipdatekey]' />
          <map key='[state]' value='[geography.csv].[state]' />
          <map key='[subcategory_key (product_category.csv)]' value='[product_category.csv].[subcategory_key]' />
          <map key='[subcategory_key]' value='[product.csv].[subcategory_key]' />
          <map key='[subcategory_name]' value='[product_category.csv].[subcategory_name]' />
          <map key='[totalproductcost]' value='[sales.csv].[totalproductcost]' />
          <map key='[unitprice]' value='[sales.csv].[unitprice]' />
          <map key='[yearlyincome]' value='[customer.csv].[yearlyincome]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[customer.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customerkey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customerkey]</local-name>
            <parent-name>[customer.csv]</parent-name>
            <remote-alias>customerkey</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geographykey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[geographykey]</local-name>
            <parent-name>[customer.csv]</parent-name>
            <remote-alias>geographykey</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customeralternatekey</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customeralternatekey]</local-name>
            <parent-name>[customer.csv]</parent-name>
            <remote-alias>customeralternatekey</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[customer_name]</local-name>
            <parent-name>[customer.csv]</parent-name>
            <remote-alias>customer_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[customer.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>email_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[email_id]</local-name>
            <parent-name>[customer.csv]</parent-name>
            <remote-alias>email_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yearlyincome</remote-name>
            <remote-type>5</remote-type>
            <local-name>[yearlyincome]</local-name>
            <parent-name>[customer.csv]</parent-name>
            <remote-alias>yearlyincome</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[customer.csv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[phone]</local-name>
            <parent-name>[customer.csv]</parent-name>
            <remote-alias>phone</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datefirstpurchase</remote-name>
            <remote-type>133</remote-type>
            <local-name>[datefirstpurchase]</local-name>
            <parent-name>[customer.csv]</parent-name>
            <remote-alias>datefirstpurchase</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[geography.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geographykey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[geographykey (geography.csv)]</local-name>
            <parent-name>[geography.csv]</parent-name>
            <remote-alias>geographykey</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[geography.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[geography.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[geography.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postalcode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[postalcode]</local-name>
            <parent-name>[geography.csv]</parent-name>
            <remote-alias>postalcode</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salesterritorykey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[salesterritorykey]</local-name>
            <parent-name>[geography.csv]</parent-name>
            <remote-alias>salesterritorykey</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sales.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productkey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[productkey]</local-name>
            <parent-name>[sales.csv]</parent-name>
            <remote-alias>productkey</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orderdatekey</remote-name>
            <remote-type>133</remote-type>
            <local-name>[orderdatekey]</local-name>
            <parent-name>[sales.csv]</parent-name>
            <remote-alias>orderdatekey</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shipdatekey</remote-name>
            <remote-type>133</remote-type>
            <local-name>[shipdatekey]</local-name>
            <parent-name>[sales.csv]</parent-name>
            <remote-alias>shipdatekey</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customerkey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[customerkey (sales.csv)]</local-name>
            <parent-name>[sales.csv]</parent-name>
            <remote-alias>customerkey</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salesterritorykey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[salesterritorykey (sales.csv)]</local-name>
            <parent-name>[sales.csv]</parent-name>
            <remote-alias>salesterritorykey</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salesordernumber</remote-name>
            <remote-type>129</remote-type>
            <local-name>[salesordernumber]</local-name>
            <parent-name>[sales.csv]</parent-name>
            <remote-alias>salesordernumber</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unitprice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unitprice]</local-name>
            <parent-name>[sales.csv]</parent-name>
            <remote-alias>unitprice</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalproductcost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[totalproductcost]</local-name>
            <parent-name>[sales.csv]</parent-name>
            <remote-alias>totalproductcost</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salesamount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[salesamount]</local-name>
            <parent-name>[sales.csv]</parent-name>
            <remote-alias>salesamount</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SalesBudget.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[SalesBudget.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>25</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Budget</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Budget]</local-name>
            <parent-name>[SalesBudget.csv]</parent-name>
            <remote-alias>Budget</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[date.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datekey</remote-name>
            <remote-type>133</remote-type>
            <local-name>[datekey]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>datekey</remote-alias>
            <ordinal>27</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>28</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[date.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[product.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productkey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[productkey (product.csv)]</local-name>
            <parent-name>[product.csv]</parent-name>
            <remote-alias>productkey</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productalternatekey</remote-name>
            <remote-type>129</remote-type>
            <local-name>[productalternatekey]</local-name>
            <parent-name>[product.csv]</parent-name>
            <remote-alias>productalternatekey</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory_key</remote-name>
            <remote-type>20</remote-type>
            <local-name>[subcategory_key]</local-name>
            <parent-name>[product.csv]</parent-name>
            <remote-alias>subcategory_key</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[product_name]</local-name>
            <parent-name>[product.csv]</parent-name>
            <remote-alias>product_name</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>color</remote-name>
            <remote-type>129</remote-type>
            <local-name>[color]</local-name>
            <parent-name>[product.csv]</parent-name>
            <remote-alias>color</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[product_category.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory_key</remote-name>
            <remote-type>20</remote-type>
            <local-name>[subcategory_key (product_category.csv)]</local-name>
            <parent-name>[product_category.csv]</parent-name>
            <remote-alias>subcategory_key</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subcategory_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subcategory_name]</local-name>
            <parent-name>[product_category.csv]</parent-name>
            <remote-alias>subcategory_name</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>productcategorykey</remote-name>
            <remote-type>20</remote-type>
            <local-name>[productcategorykey]</local-name>
            <parent-name>[product_category.csv]</parent-name>
            <remote-alias>productcategorykey</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category_name]</local-name>
            <parent-name>[product_category.csv]</parent-name>
            <remote-alias>category_name</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Budget]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='SalesBudget.csv' datatype='table' name='[__tableau_internal_object_id__].[SalesBudget.csv_54AD099BACBA46CAB7AA893CAB09B06C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='customer.csv' datatype='table' name='[__tableau_internal_object_id__].[customer.csv_796C60FC2B73480E9083B721022B5E6C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='date.csv' datatype='table' name='[__tableau_internal_object_id__].[date.csv_4F10E8713DD84EAEAC59F00B056A95E3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='geography.csv' datatype='table' name='[__tableau_internal_object_id__].[geography.csv_333DC63A3B364348A5C296B46A48766D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='product.csv' datatype='table' name='[__tableau_internal_object_id__].[product.csv_FCEE6199898A4C299B98B6AC213EC6D6]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='product_category.csv' datatype='table' name='[__tableau_internal_object_id__].[product_category.csv_883C5148D3D847FFB88276509265FE7D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='sales.csv' datatype='table' name='[__tableau_internal_object_id__].[sales.csv_C870AD02C7C04480B77D18EC2D301354]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
      <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Color' datatype='string' name='[color]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Customer Name' datatype='string' name='[customer_name]' role='dimension' type='nominal' />
      <column caption='Customeralternatekey' datatype='string' name='[customeralternatekey]' role='dimension' type='nominal' />
      <column caption='Customerkey (Sales.Csv)' datatype='integer' name='[customerkey (sales.csv)]' role='measure' type='quantitative' />
      <column caption='Customerkey' datatype='integer' name='[customerkey]' role='measure' type='quantitative' />
      <column caption='Date1' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Datefirstpurchase' datatype='date' name='[datefirstpurchase]' role='dimension' type='ordinal' />
      <column caption='Datekey' datatype='date' name='[datekey]' role='dimension' type='ordinal' />
      <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
      <column caption='Email Id' datatype='string' name='[email_id]' role='dimension' type='nominal' />
      <column caption='Geographykey (Geography.Csv)' datatype='integer' name='[geographykey (geography.csv)]' role='measure' type='quantitative' />
      <column caption='Geographykey' datatype='integer' name='[geographykey]' role='measure' type='quantitative' />
      <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
      <column caption='Phone' datatype='string' name='[phone]' role='dimension' type='nominal' />
      <column caption='Postalcode' datatype='string' name='[postalcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
      <column caption='Productalternatekey' datatype='string' name='[productalternatekey]' role='dimension' type='nominal' />
      <column caption='Productcategorykey' datatype='integer' name='[productcategorykey]' role='measure' type='quantitative' />
      <column caption='Productkey (Product.Csv)' datatype='integer' name='[productkey (product.csv)]' role='measure' type='quantitative' />
      <column caption='Productkey' datatype='integer' name='[productkey]' role='measure' type='quantitative' />
      <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
      <column caption='Salesordernumber' datatype='string' name='[salesordernumber]' role='dimension' type='nominal' />
      <column caption='Salesterritorykey (Sales.Csv)' datatype='integer' name='[salesterritorykey (sales.csv)]' role='measure' type='quantitative' />
      <column caption='Salesterritorykey' datatype='integer' name='[salesterritorykey]' role='measure' type='quantitative' />
      <column caption='Shipdatekey' datatype='date' name='[shipdatekey]' role='dimension' type='ordinal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Subcategory Key (Product Category.Csv)' datatype='integer' name='[subcategory_key (product_category.csv)]' role='dimension' type='ordinal' />
      <column caption='Subcategory Key' datatype='integer' name='[subcategory_key]' role='dimension' type='ordinal' />
      <column caption='Subcategory Name' datatype='string' name='[subcategory_name]' role='dimension' type='nominal' />
      <column caption='Totalproductcost' datatype='real' name='[totalproductcost]' role='measure' type='quantitative' />
      <column caption='Unitprice' datatype='real' name='[unitprice]' role='measure' type='quantitative' />
      <column caption='Yearlyincome' datatype='real' name='[yearlyincome]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[SalesBudget.csv_54AD099BACBA46CAB7AA893CAB09B06C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:SalesBudget.csv_54AD099BACBA46CAB7AA893CAB09B06C:qk]' pivot='key' type='quantitative' />
      <column-instance column='[category_name]' derivation='None' name='[none:category_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
      <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[orderdatekey]' derivation='Quarter-Trunc' name='[tqr:orderdatekey:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Category Name,Subcategory Name)' hidden='true' name='[Action (Category Name,Subcategory Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[category_name]' />
          <groupfilter function='level-members' level='[subcategory_name]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (Customer Name,Customeralternatekey)' hidden='true' name='[Action (Customer Name,Customeralternatekey)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[customer_name]' />
          <groupfilter function='level-members' level='[customeralternatekey]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Name,Productalternatekey)' hidden='true' name='[Action (Product Name,Productalternatekey)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[product_name]' />
          <groupfilter function='level-members' level='[productalternatekey]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Orderdatekey))' hidden='true' name='[Action (QUARTER(Orderdatekey))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tqr:orderdatekey:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='region'>
          <field>[country]</field>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:category_name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Components&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clothing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bikes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gfj05017w2an918lglgh0dsyy7d].[__tableau_internal_object_id__].[cnt:SalesBudget.csv_54AD099BACBA46CAB7AA893CAB09B06C:qk]&quot;</bucket>
            </map>
            <map to='#e96b20'>
              <bucket>&quot;[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:Budget:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SalesBudget.csv' id='SalesBudget.csv_54AD099BACBA46CAB7AA893CAB09B06C'>
            <properties context=''>
              <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='SalesBudget.csv' table='[SalesBudget#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='real' name='Budget' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='customer.csv' id='customer.csv_796C60FC2B73480E9083B721022B5E6C'>
            <properties context=''>
              <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='customer.csv' table='[customer#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='customerkey' ordinal='0' />
                  <column datatype='integer' name='geographykey' ordinal='1' />
                  <column datatype='string' name='customeralternatekey' ordinal='2' />
                  <column datatype='string' name='customer_name' ordinal='3' />
                  <column datatype='integer' name='age' ordinal='4' />
                  <column datatype='string' name='email_id' ordinal='5' />
                  <column datatype='real' name='yearlyincome' ordinal='6' />
                  <column datatype='string' name='address' ordinal='7' />
                  <column datatype='string' name='phone' ordinal='8' />
                  <column datatype='date' name='datefirstpurchase' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='date.csv' id='date.csv_4F10E8713DD84EAEAC59F00B056A95E3'>
            <properties context=''>
              <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='date.csv' table='[date#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='datekey' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='day' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='geography.csv' id='geography.csv_333DC63A3B364348A5C296B46A48766D'>
            <properties context=''>
              <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='geography.csv' table='[geography#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='geographykey' ordinal='0' />
                  <column datatype='string' name='city' ordinal='1' />
                  <column datatype='string' name='state' ordinal='2' />
                  <column datatype='string' name='country' ordinal='3' />
                  <column datatype='string' name='postalcode' ordinal='4' />
                  <column datatype='integer' name='salesterritorykey' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='product.csv' id='product.csv_FCEE6199898A4C299B98B6AC213EC6D6'>
            <properties context=''>
              <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='product.csv' table='[product#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='productkey' ordinal='0' />
                  <column datatype='string' name='productalternatekey' ordinal='1' />
                  <column datatype='integer' name='subcategory_key' ordinal='2' />
                  <column datatype='string' name='product_name' ordinal='3' />
                  <column datatype='string' name='color' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='product_category.csv' id='product_category.csv_883C5148D3D847FFB88276509265FE7D'>
            <properties context=''>
              <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='product_category.csv' table='[product_category#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='subcategory_key' ordinal='0' />
                  <column datatype='string' name='subcategory_name' ordinal='1' />
                  <column datatype='integer' name='productcategorykey' ordinal='2' />
                  <column datatype='string' name='category_name' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='sales.csv' id='sales.csv_C870AD02C7C04480B77D18EC2D301354'>
            <properties context=''>
              <relation connection='textscan.1yepr6v1urcn311c8nps61yxnl8d' name='sales.csv' table='[sales#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='productkey' ordinal='0' />
                  <column datatype='date' name='orderdatekey' ordinal='1' />
                  <column datatype='date' name='shipdatekey' ordinal='2' />
                  <column datatype='integer' name='customerkey' ordinal='3' />
                  <column datatype='integer' name='salesterritorykey' ordinal='4' />
                  <column datatype='string' name='salesordernumber' ordinal='5' />
                  <column datatype='real' name='unitprice' ordinal='6' />
                  <column datatype='real' name='totalproductcost' ordinal='7' />
                  <column datatype='real' name='salesamount' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[orderdatekey]' />
              <expression op='[Date]' />
            </expression>
            <first-end-point object-id='sales.csv_C870AD02C7C04480B77D18EC2D301354' />
            <second-end-point object-id='SalesBudget.csv_54AD099BACBA46CAB7AA893CAB09B06C' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='SalesBudget.csv_54AD099BACBA46CAB7AA893CAB09B06C' />
            <second-end-point object-id='date.csv_4F10E8713DD84EAEAC59F00B056A95E3' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[geographykey]' />
              <expression op='[geographykey (geography.csv)]' />
            </expression>
            <first-end-point object-id='customer.csv_796C60FC2B73480E9083B721022B5E6C' />
            <second-end-point object-id='geography.csv_333DC63A3B364348A5C296B46A48766D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[productkey]' />
              <expression op='[productkey (product.csv)]' />
            </expression>
            <first-end-point object-id='sales.csv_C870AD02C7C04480B77D18EC2D301354' />
            <second-end-point object-id='product.csv_FCEE6199898A4C299B98B6AC213EC6D6' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[subcategory_key]' />
              <expression op='[subcategory_key (product_category.csv)]' />
            </expression>
            <first-end-point object-id='product.csv_FCEE6199898A4C299B98B6AC213EC6D6' />
            <second-end-point object-id='product_category.csv_883C5148D3D847FFB88276509265FE7D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[customerkey]' />
              <expression op='[customerkey (sales.csv)]' />
            </expression>
            <first-end-point object-id='customer.csv_796C60FC2B73480E9083B721022B5E6C' />
            <second-end-point object-id='sales.csv_C870AD02C7C04480B77D18EC2D301354' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1_666B29B3AB5B4C8FAE1518DE58358BB4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_7ACDB9E3C8624DD5826457A74F566921]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='top 10 product ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_684180A9A14D4470BF244D7E197DE71A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Product categories vs. sales amount' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_FB60DD50B1C2496DB526B0933AADDC2F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales figures vs. budget' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6_3C5ABEE4970C4DF59EAAB36FC12E915B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='top 10 customer' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action6_AE0B7A3CDDCC4590B35490D4983E7C89]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales figures by region/city' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Product categories vs. sales amount'>
      <table>
        <view>
          <datasources>
            <datasource caption='customer+' name='federated.0gfj05017w2an918lglgh0dsyy7d' />
          </datasources>
          <datasource-dependencies datasource='federated.0gfj05017w2an918lglgh0dsyy7d'>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='Customer Name' datatype='string' name='[customer_name]' role='dimension' type='nominal' />
            <column caption='Customeralternatekey' datatype='string' name='[customeralternatekey]' role='dimension' type='nominal' />
            <column-instance column='[category_name]' derivation='None' name='[none:category_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[subcategory_name]' derivation='None' name='[none:subcategory_name:nk]' pivot='key' type='nominal' />
            <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Productalternatekey' datatype='string' name='[productalternatekey]' role='dimension' type='nominal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column caption='Subcategory Name' datatype='string' name='[subcategory_name]' role='dimension' type='nominal' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[orderdatekey]' derivation='Quarter-Trunc' name='[tqr:orderdatekey:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Customer Name,Customeralternatekey)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_3C5ABEE4970C4DF59EAAB36FC12E915B]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[customer_name]' member='&quot;Nichole   Nara&quot;' />
              <groupfilter function='member' level='[customeralternatekey]' member='&quot;AW00012301&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Product Name,Productalternatekey)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7ACDB9E3C8624DD5826457A74F566921]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[product_name]' />
              <groupfilter function='level-members' level='[productalternatekey]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (QUARTER(Orderdatekey))]'>
            <groupfilter function='level-members' level='[tqr:orderdatekey:ok]' user:ui-action-filter='[Action4_FB60DD50B1C2496DB526B0933AADDC2F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Product Name,Productalternatekey)]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (QUARTER(Orderdatekey))]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Customer Name,Customeralternatekey)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='325' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' />
              <text column='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:category_name:nk]' />
              <text column='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:subcategory_name:nk]' />
              <color column='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:category_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7B5E7CDE-B85F-4F8B-9CDF-6BB2EFA8F500}' />
    </worksheet>
    <worksheet name='Sales figures by region/city'>
      <table>
        <view>
          <datasources>
            <datasource caption='customer+' name='federated.0gfj05017w2an918lglgh0dsyy7d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gfj05017w2an918lglgh0dsyy7d'>
            <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Customer Name' datatype='string' name='[customer_name]' role='dimension' type='nominal' />
            <column caption='Customeralternatekey' datatype='string' name='[customeralternatekey]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Productalternatekey' datatype='string' name='[productalternatekey]' role='dimension' type='nominal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Subcategory Name' datatype='string' name='[subcategory_name]' role='dimension' type='nominal' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[orderdatekey]' derivation='Quarter-Trunc' name='[tqr:orderdatekey:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Category Name,Subcategory Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_684180A9A14D4470BF244D7E197DE71A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[category_name]' />
              <groupfilter function='level-members' level='[subcategory_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Customer Name,Customeralternatekey)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_3C5ABEE4970C4DF59EAAB36FC12E915B]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[customer_name]' member='&quot;Nichole   Nara&quot;' />
              <groupfilter function='member' level='[customeralternatekey]' member='&quot;AW00012301&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Product Name,Productalternatekey)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7ACDB9E3C8624DD5826457A74F566921]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[product_name]' />
              <groupfilter function='level-members' level='[productalternatekey]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (QUARTER(Orderdatekey))]'>
            <groupfilter function='level-members' level='[tqr:orderdatekey:ok]' user:ui-action-filter='[Action4_FB60DD50B1C2496DB526B0933AADDC2F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([address])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:country:nk]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Product Name,Productalternatekey)]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Category Name,Subcategory Name)]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (QUARTER(Orderdatekey))]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Customer Name,Customeralternatekey)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='307' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' />
              <color column='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' />
              <text column='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:country:nk]' />
              <text column='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F6EA854D-DC25-4568-A5C6-DAE785EFFC82}' />
    </worksheet>
    <worksheet name='Sales figures vs. budget'>
      <table>
        <view>
          <datasources>
            <datasource caption='customer+' name='federated.0gfj05017w2an918lglgh0dsyy7d' />
          </datasources>
          <datasource-dependencies datasource='federated.0gfj05017w2an918lglgh0dsyy7d'>
            <column datatype='real' name='[Budget]' role='measure' type='quantitative' />
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='Customer Name' datatype='string' name='[customer_name]' role='dimension' type='nominal' />
            <column caption='Customeralternatekey' datatype='string' name='[customeralternatekey]' role='dimension' type='nominal' />
            <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Productalternatekey' datatype='string' name='[productalternatekey]' role='dimension' type='nominal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column caption='Subcategory Name' datatype='string' name='[subcategory_name]' role='dimension' type='nominal' />
            <column-instance column='[Budget]' derivation='Sum' name='[sum:Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[orderdatekey]' derivation='Quarter-Trunc' name='[tqr:orderdatekey:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Category Name,Subcategory Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_684180A9A14D4470BF244D7E197DE71A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[category_name]' />
              <groupfilter function='level-members' level='[subcategory_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Customer Name,Customeralternatekey)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_3C5ABEE4970C4DF59EAAB36FC12E915B]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[customer_name]' member='&quot;Nichole   Nara&quot;' />
              <groupfilter function='member' level='[customeralternatekey]' member='&quot;AW00012301&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Product Name,Productalternatekey)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7ACDB9E3C8624DD5826457A74F566921]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[product_name]' />
              <groupfilter function='level-members' level='[productalternatekey]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Product Name,Productalternatekey)]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Category Name,Subcategory Name)]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Customer Name,Customeralternatekey)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gfj05017w2an918lglgh0dsyy7d].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:Budget:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gfj05017w2an918lglgh0dsyy7d].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gfj05017w2an918lglgh0dsyy7d].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gfj05017w2an918lglgh0dsyy7d].[sum:Budget:qk] + [federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk])</rows>
        <cols>[federated.0gfj05017w2an918lglgh0dsyy7d].[tqr:orderdatekey:ok]</cols>
      </table>
      <simple-id uuid='{A196DCB1-873F-4433-92BA-9F260D697171}' />
    </worksheet>
    <worksheet name='top 10 customer'>
      <table>
        <view>
          <datasources>
            <datasource caption='customer+' name='federated.0gfj05017w2an918lglgh0dsyy7d' />
          </datasources>
          <datasource-dependencies datasource='federated.0gfj05017w2an918lglgh0dsyy7d'>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='Customer Name' datatype='string' name='[customer_name]' role='dimension' type='nominal' />
            <column caption='Customeralternatekey' datatype='string' name='[customeralternatekey]' role='dimension' type='nominal' />
            <column-instance column='[customer_name]' derivation='None' name='[none:customer_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[customeralternatekey]' derivation='None' name='[none:customeralternatekey:nk]' pivot='key' type='nominal' />
            <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Productalternatekey' datatype='string' name='[productalternatekey]' role='dimension' type='nominal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column caption='Subcategory Name' datatype='string' name='[subcategory_name]' role='dimension' type='nominal' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[orderdatekey]' derivation='Quarter-Trunc' name='[tqr:orderdatekey:ok]' pivot='key' type='ordinal' />
            <column-instance column='[orderdatekey]' derivation='Year' name='[yr:orderdatekey:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Category Name,Subcategory Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_684180A9A14D4470BF244D7E197DE71A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[category_name]' />
              <groupfilter function='level-members' level='[subcategory_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Product Name,Productalternatekey)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_7ACDB9E3C8624DD5826457A74F566921]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[product_name]' />
              <groupfilter function='level-members' level='[productalternatekey]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (QUARTER(Orderdatekey))]'>
            <groupfilter function='level-members' level='[tqr:orderdatekey:ok]' user:ui-action-filter='[Action4_FB60DD50B1C2496DB526B0933AADDC2F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:customer_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([salesamount])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:customer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:customer_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Nichole   Nara&quot;</bucket>
              <bucket>&quot;Kaitlyn J Henderson&quot;</bucket>
              <bucket>&quot;Margaret   He&quot;</bucket>
              <bucket>&quot;Randall M Dominguez&quot;</bucket>
              <bucket>&quot;Adriana L Gonzalez&quot;</bucket>
              <bucket>&quot;Rosa K Hu&quot;</bucket>
              <bucket>&quot;Brandi D Gill&quot;</bucket>
              <bucket>&quot;Brad   She&quot;</bucket>
              <bucket>&quot;Francisco A Sara&quot;</bucket>
              <bucket>&quot;Maurice M Shan&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[yr:orderdatekey:ok]'>
            <groupfilter function='level-members' level='[yr:orderdatekey:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:customer_name:nk]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[yr:orderdatekey:ok]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Product Name,Productalternatekey)]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Category Name,Subcategory Name)]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (QUARTER(Orderdatekey))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:customeralternatekey:nk]' value='17' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' />
              <text column='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gfj05017w2an918lglgh0dsyy7d].[none:customer_name:nk] / [federated.0gfj05017w2an918lglgh0dsyy7d].[none:customeralternatekey:nk])</rows>
        <cols>[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]</cols>
      </table>
      <simple-id uuid='{F8CBD9D9-3A67-4470-9E11-CCBD6623DA4A}' />
    </worksheet>
    <worksheet name='top 10 product '>
      <table>
        <view>
          <datasources>
            <datasource caption='customer+' name='federated.0gfj05017w2an918lglgh0dsyy7d' />
          </datasources>
          <datasource-dependencies datasource='federated.0gfj05017w2an918lglgh0dsyy7d'>
            <column caption='Category Name' datatype='string' name='[category_name]' role='dimension' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Customer Name' datatype='string' name='[customer_name]' role='dimension' type='nominal' />
            <column caption='Customeralternatekey' datatype='string' name='[customeralternatekey]' role='dimension' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[product_name]' derivation='None' name='[none:product_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[productalternatekey]' derivation='None' name='[none:productalternatekey:nk]' pivot='key' type='nominal' />
            <column caption='Orderdatekey' datatype='date' name='[orderdatekey]' role='dimension' type='ordinal' />
            <column caption='Product Name' datatype='string' name='[product_name]' role='dimension' type='nominal' />
            <column caption='Productalternatekey' datatype='string' name='[productalternatekey]' role='dimension' type='nominal' />
            <column caption='Salesamount' datatype='real' name='[salesamount]' role='measure' type='quantitative' />
            <column caption='Subcategory Name' datatype='string' name='[subcategory_name]' role='dimension' type='nominal' />
            <column-instance column='[salesamount]' derivation='Sum' name='[sum:salesamount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[orderdatekey]' derivation='Quarter-Trunc' name='[tqr:orderdatekey:ok]' pivot='key' type='ordinal' />
            <column-instance column='[orderdatekey]' derivation='Year' name='[yr:orderdatekey:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Category Name,Subcategory Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_684180A9A14D4470BF244D7E197DE71A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[category_name]' />
              <groupfilter function='level-members' level='[subcategory_name]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Customer Name,Customeralternatekey)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_3C5ABEE4970C4DF59EAAB36FC12E915B]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[customer_name]' member='&quot;Nichole   Nara&quot;' />
              <groupfilter function='member' level='[customeralternatekey]' member='&quot;AW00012301&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (QUARTER(Orderdatekey))]'>
            <groupfilter function='level-members' level='[tqr:orderdatekey:ok]' user:ui-action-filter='[Action4_FB60DD50B1C2496DB526B0933AADDC2F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:product_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([salesamount])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:product_name:nk]' direction='ASC' using='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' />
          <filter class='categorical' column='[federated.0gfj05017w2an918lglgh0dsyy7d].[yr:orderdatekey:ok]'>
            <groupfilter function='level-members' level='[yr:orderdatekey:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:productalternatekey:nk]' direction='DESC' measure-to-sort-by='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:product_name:nk]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[yr:orderdatekey:ok]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:country:nk]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Category Name,Subcategory Name)]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (QUARTER(Orderdatekey))]</column>
            <column>[federated.0gfj05017w2an918lglgh0dsyy7d].[Action (Customer Name,Customeralternatekey)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' />
              <text column='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gfj05017w2an918lglgh0dsyy7d].[none:productalternatekey:nk] / [federated.0gfj05017w2an918lglgh0dsyy7d].[none:product_name:nk])</rows>
        <cols>[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]</cols>
      </table>
      <simple-id uuid='{CCF4F357-0007-428C-9970-B2770E0C7768}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1169' maxwidth='827' minheight='1169' minwidth='827' preset-index='15' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='28913' id='8' param='horz' type-v2='layout-flow' w='98066' x='967' y='67665'>
            <zone h='28913' id='10' param='vert' type-v2='layout-flow' w='57798' x='967' y='67665'>
              <zone fixed-size='319' h='27972' id='11' is-fixed='true' name='Sales figures vs. budget' w='57798' x='967' y='67665'>
                <layout-cache cell-count-w='4' minheight='185' non-cell-size-w='133' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='28913' id='9' name='Product categories vs. sales amount' w='40266' x='58765' y='67665'>
              <layout-cache fixed-size-h='373' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='30652' id='19' param='vert' type-v2='layout-flow' w='98066' x='967' y='7186'>
            <zone h='14285' id='27' name='top 10 product ' w='98066' x='967' y='7186'>
              <layout-cache fixed-size-h='159' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='29827' id='20' param='vert' type-v2='layout-flow' w='59855' x='967' y='37838'>
            <zone h='25406' id='25' name='top 10 customer' w='59855' x='967' y='37838'>
              <layout-cache fixed-size-h='289' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='29827' id='21' param='horz' type-v2='layout-flow' w='38211' x='60822' y='37838'>
            <zone h='29827' id='22' name='Sales figures by region/city' w='38211' x='60822' y='37838'>
              <layout-cache cell-count-w='1' non-cell-size-w='1' type-h='cell' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='6502' id='28' param='vert' type-v2='layout-flow' w='3870' x='95163' y='684' />
          <zone h='6502' id='29' param='horz' type-v2='layout-flow' w='26965' x='967' y='684'>
            <zone h='6502' id='31' is-scaled='1' param='C:/Users/hp/Desktop/DS PGC/Tableau/project/download.png' type-v2='bitmap' w='26965' x='967' y='684'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='6502' id='30' type-v2='text' w='67231' x='27932' y='684'>
            <formatted-text>
              <run bold='true' fontname='Tableau Bold' fontsize='20'>The Bike Heven Sales Dashboard</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='2738' id='36' param='horz' type-v2='layout-flow' w='57800' x='967' y='96578' />
          <zone h='2738' id='37' type-v2='dashboard-object' w='40266' x='58767' y='96578'>
            <button _.fcp.DashboardExportButton.true...button-click-action-metadata='pdf' action='' button-type='text'>
              <_.fcp.DashboardExportButton.true...export-button-action>tabdoc:abstract-dashboard-button-export-wrapper dashboard-button-export-type=&quot;pdf&quot; dashboarddoc-id=&quot;{3F2976E0-5964-42F6-936B-2BBF9AD06280}&quot;</_.fcp.DashboardExportButton.true...export-button-action>
              <button-visual-state>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#333333' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <zones>
            <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='30738' id='8' param='horz' type-v2='layout-flow' w='98066' x='967' y='68578'>
                <zone h='30738' id='33' param='horz' type-v2='layout-flow' w='57800' x='967' y='68578'>
                  <zone h='30738' id='11' name='Sales figures vs. budget' w='57800' x='967' y='68578'>
                    <layout-cache cell-count-w='14' minheight='224' non-cell-size-w='127' type-h='scalable' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='30738' id='9' name='Product categories vs. sales amount' w='40266' x='58767' y='68578'>
                  <layout-cache fixed-size-h='373' fixed-size-w='325' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='30652' id='19' param='vert' type-v2='layout-flow' w='98066' x='967' y='7186'>
                <zone h='27972' id='27' name='top 10 product ' w='98066' x='967' y='7186'>
                  <layout-cache fixed-size-h='319' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='30740' id='20' param='vert' type-v2='layout-flow' w='59855' x='967' y='37838'>
                <zone h='25406' id='25' name='top 10 customer' w='59855' x='967' y='37838'>
                  <layout-cache fixed-size-h='289' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='30740' id='21' param='horz' type-v2='layout-flow' w='38211' x='60822' y='37838'>
                <zone h='20616' id='22' name='Sales figures by region/city' w='38211' x='60822' y='37838'>
                  <layout-cache fixed-size-h='233' fixed-size-w='308' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='6502' id='28' param='vert' type-v2='layout-flow' w='3870' x='95163' y='684' />
              <zone h='6502' id='29' param='horz' type-v2='layout-flow' w='26965' x='967' y='684' />
              <zone h='6502' id='30' type-v2='text' w='67231' x='27932' y='684'>
                <formatted-text>
                  <run bold='true' fontname='Tableau Bold' fontsize='20'>The Bike Heven Sales Dashboard</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3F2976E0-5964-42F6-936B-2BBF9AD06280}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='top 10 product '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:country:nk]' type='filter' />
            <card param='[federated.0gfj05017w2an918lglgh0dsyy7d].[yr:orderdatekey:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:country:nk]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:orderdatekey:qk]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:product_name:nk]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:productalternatekey:nk]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[yr:orderdatekey:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AFDC5B15-1AF3-436A-8441-3631DD8F88D3}' />
    </window>
    <window class='worksheet' name='top 10 customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gfj05017w2an918lglgh0dsyy7d].[yr:orderdatekey:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:country:nk]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:customer_name:nk]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:customeralternatekey:nk]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[yr:orderdatekey:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6265714E-8F28-4607-81E7-865D626F8807}' />
    </window>
    <window class='worksheet' name='Sales figures vs. budget'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0gfj05017w2an918lglgh0dsyy7d].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[:Measure Names]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[my:orderdatekey:ok]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[yr:orderdatekey:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6C494EBA-0F86-4484-8DE7-B88E48E9F5A4}' />
    </window>
    <window class='worksheet' name='Sales figures by region/city'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:country:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.0gfj05017w2an918lglgh0dsyy7d].[sum:salesamount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:country:nk]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00B9BFAA-3FBF-48A0-BD88-1B3F2F7FB03A}' />
    </window>
    <window class='worksheet' name='Product categories vs. sales amount'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gfj05017w2an918lglgh0dsyy7d].[none:category_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:category_name:nk]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:product_name:nk]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:subcategory_name:nk]</field>
            <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[yr:orderdatekey:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FEA3CF81-EA1F-4A0E-B7B7-1F73BE492D1E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Product categories vs. sales amount' />
        <viewpoint name='Sales figures by region/city'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales figures vs. budget'>
          <zoom type='entire-view' />
          <highlight field='[federated.0gfj05017w2an918lglgh0dsyy7d].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='top 10 customer'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.0gfj05017w2an918lglgh0dsyy7d].[none:customer_name:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Nichole   Nara&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='top 10 product ' />
      </viewpoints>
      <active id='25' />
      <simple-id uuid='{740C7097-A347-4E2E-8A82-E439FC44A69C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='Dashboard 1' width='240'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Product categories vs. sales amount' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Sales figures by region/city' width='240'>
      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
      VUIFLFAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Sales figures vs. budget' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='top 10 customer' width='240'>
      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
      W7ODuplWAoEZiuvdpDQ7e175Lpbu3z6QB5atuWxr+TY2+3IXUEcl1Y5xookkxsI8dh16Datt
      KdqIvZrqq5PMpxLI4XFyyraxsaYQswRbdzUzcHqE2UQDxEYYTrt4avdmfDlmyLGz7jG2Cz/2
      sySzGMPfeZG21st0ByJIsoQUm6RneJK0LiPrCQYun6V7Og2kGe84z0cnrjARV5D0KB2nzjOS
      BPQ4/a1nuOKfBQkWp6aYTqVJzgXp6rrNfArS8Vk6r19hKq4ikWF6KsBMNI2uq/Rc/Ijrg7Po
      MsRnR5iOwWLgFicudhFRQEqGaT9xkruxh2cXTk/2E3A1UF/sw4tOKBL5xHxPBjz5eaQmOjl3
      tZv55IOjh2Ri0wyNjZNUJWR9gbtX2+kJRYAUgYEB/B2tnLnUT0xZmt5lerCbiVgGSZZR5vs4
      e67/oblrs4tCsDeAZ00VJfk+1HScWCwFgOQqoDw1TSCpghYlELVT5XPidOuEw0sDz8xPhfCU
      FGBgkemQgdIS51IeWJZxunwYUrMklGlm54ooWootIRlNuHJcqLEIKX2aSLSIfO/SMtlswW21
      k16IoxnNlDVupMxteSgPbDAYsNvv99+eHx9mUpMpdDsxGI3YVopXV5kZ9hO22CjMsaPrIBmN
      99Zn8eVRmEwzm0kxPxuBxAK9V4/ym1/9mt/98SS9E9HHNoHeV5rcbKDtODfbP16enKqSw68e
      pt6mEh4NIG3azL5NdbhsJiQlh+atXpAkJF0llHmX21NpNhYYABcNT2xme0UxZlnFPf2vTC3q
      lEUGuRVzsXffTopdFrR0BtVkJLlqitVMKkEiY6JmyxaqPGYkNGSDCS3RQ/dYAXvf2EeRzYim
      pNClCLfOjlK49Ul21xRi1DOsufU+v780TM2hmvt9rvUUI31hSht3YTE6qSjQORuYYWt1/qrZ
      6mRyips4dMjCjSuX+OVPTlLYuJ39e5opc9swOgtZvzkXTZeRUBlNfMzYXBxK3JCa4PqQnedf
      fYYSjwOjLJFu2MYOVcIgSWiZAs6+3cOc2oQjS5MVeipEd9jBmvVOTC4rBUo3o3NRKnxWMHip
      KYnTEUyzjlnm7U7q7Q6i3jyi4WmUcjPjQQ9rD1qARTTVRY5jZc0SZpMDsyWOrinoVheOla8g
      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
      qc0ZLwkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='top 10 product ' width='240'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
